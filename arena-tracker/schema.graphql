type TokenDeployment @entity(immutable: false) {
  id: ID! # token address
  tokenAddress: Bytes!
  creator: Bytes!
  tokenId: BigInt!
  deployedAt: BigInt!
  
  # Token Metadata (fetched from contract)
  name: String!
  symbol: String!
  decimals: Int!
  totalSupply: BigInt!
  
  # Bonding Curve Data
  bondingProgress: BigDecimal! # 0-100, percentage toward 503.15 AVAX
  migrationStatus: MigrationStatus!
  currentPriceAvax: BigDecimal! # Current price in AVAX
  avaxRaised: BigDecimal! # Total AVAX raised from bonding curve
  
  # Trading Statistics
  totalAvaxVolume: BigDecimal! # Total AVAX traded (buy + sell)
  totalBuyVolume: BigDecimal! # Total AVAX spent on buys
  totalSellVolume: BigDecimal! # Total AVAX received from sells
  totalTrades: Int!
  totalBuys: Int!
  totalSells: Int!
  uniqueTraders: Int!
  
  # Market Data
  marketCapAvax: BigDecimal! # Market cap in AVAX
  liquidityAvax: BigDecimal! # Liquidity in AVAX
  holders: Int! # Number of unique holders
  
  # Price History
  priceHigh24h: BigDecimal!
  priceLow24h: BigDecimal!
  volume24h: BigDecimal!
  priceChange24h: BigDecimal!
  
  # Migration Data
  migrationThreshold: BigDecimal! # AVAX threshold for migration (usually 503.15)
  pairAddress: Bytes # DEX pair address after migration
  
  # Timestamps
  lastTradeTimestamp: BigInt!
  lastUpdateTimestamp: BigInt!
  
  # Relations
  bondingEvents: [BondingEvent!]! @derivedFrom(field: "token")
  priceSnapshots: [PriceSnapshot!]! @derivedFrom(field: "token")
}

type BondingEvent @entity(immutable: true) {
  id: ID! # txHash-logIndex
  token: TokenDeployment!
  user: Bytes!
  avaxAmount: BigDecimal! # AVAX amount in trade
  tokenAmount: BigDecimal! # Token amount in trade
  priceAvax: BigDecimal! # Price at time of trade
  bondingProgress: BigDecimal! # Progress after this trade (0-100)
  cumulativeAvax: BigDecimal! # Total AVAX raised after this trade
  tradeType: TradeType!
  
  # Fee Information
  protocolFee: BigDecimal!
  creatorFee: BigDecimal!
  referralFee: BigDecimal!
  
  # Context
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
  gasPrice: BigInt!
  gasUsed: BigInt!
}

type PriceSnapshot @entity(immutable: false) {
  id: ID! # token-timestamp
  token: TokenDeployment!
  priceAvax: BigDecimal!
  volumeAvax: BigDecimal! # Volume in this time period
  trades: Int! # Number of trades in this time period
  timestamp: BigInt!
  period: SnapshotPeriod! # HOURLY, DAILY
}

type UserActivity @entity(immutable: false) {
  id: ID! # user address
  userAddress: Bytes!
  totalTrades: Int!
  totalVolumeAvax: BigDecimal!
  totalTokensBought: BigDecimal!
  totalTokensSold: BigDecimal!
  totalFeesSpent: BigDecimal!
  uniqueTokensTraded: Int!
  firstTradeTimestamp: BigInt!
  lastTradeTimestamp: BigInt!
  
  # Portfolio Tracking
  currentPortfolioValueAvax: BigDecimal! # Current value of all holdings
  totalInvestmentAvax: BigDecimal! # Total AVAX invested (buys - sells)
  realizedPnLAvax: BigDecimal! # Actual profit/loss from completed trades
  unrealizedPnLAvax: BigDecimal! # Current unrealized profit/loss
  totalPnLAvax: BigDecimal! # Total P&L (realized + unrealized)
  
  # Performance Metrics
  winRate: BigDecimal! # Percentage of profitable trades (0-100)
  profitableTrades: Int! # Number of trades that made profit
  losingTrades: Int! # Number of trades that lost money
  averageProfitPerTrade: BigDecimal! # Average profit per winning trade
  averageLossPerTrade: BigDecimal! # Average loss per losing trade
  largestWinAvax: BigDecimal! # Biggest single trade profit
  largestLossAvax: BigDecimal! # Biggest single trade loss
  
  # Risk Metrics
  sharpeRatio: BigDecimal! # Risk-adjusted return metric
  maxDrawdownAvax: BigDecimal! # Maximum portfolio drawdown
  portfolioRoi: BigDecimal! # Return on investment percentage
  
  # Relations
  tokenPositions: [UserTokenPosition!]! @derivedFrom(field: "user")
}

type UserTokenPosition @entity(immutable: false) {
  id: ID! # user-token address
  user: UserActivity!
  token: TokenDeployment!
  
  # Current Holdings
  currentBalance: BigDecimal! # Current token balance
  currentValueAvax: BigDecimal! # Current value in AVAX
  
  # Trading History
  totalBought: BigDecimal! # Total tokens bought
  totalSold: BigDecimal! # Total tokens sold
  totalBuyValueAvax: BigDecimal! # Total AVAX spent buying
  totalSellValueAvax: BigDecimal! # Total AVAX received selling
  
  # Cost Basis & P&L
  averageBuyPrice: BigDecimal! # Average price paid per token
  averageSellPrice: BigDecimal! # Average price received per token
  realizedPnLAvax: BigDecimal! # Profit/loss from sales
  unrealizedPnLAvax: BigDecimal! # Current unrealized P&L
  totalPnLAvax: BigDecimal! # Total P&L for this position
  
  # Position Metrics
  percentOfPortfolio: BigDecimal! # What % of portfolio this represents
  holdingPeriodDays: BigDecimal! # How long held on average
  
  # Trading Statistics
  totalTrades: Int! # Total trades for this token
  totalBuys: Int! # Total buy transactions
  totalSells: Int! # Total sell transactions
  isOpen: Boolean! # Whether position is still open (balance > 0)
  
  # Timestamps
  firstBuyTimestamp: BigInt! # When first bought
  lastBuyTimestamp: BigInt! # Most recent buy
  lastSellTimestamp: BigInt! # Most recent sell
  lastUpdateTimestamp: BigInt! # Last update
}

type UserPortfolioSnapshot @entity(immutable: true) {
  id: ID! # user-timestamp
  user: UserActivity!
  
  # Portfolio Value
  totalValueAvax: BigDecimal!
  totalInvestmentAvax: BigDecimal!
  totalPnLAvax: BigDecimal!
  
  # Performance Metrics
  portfolioRoi: BigDecimal!
  winRate: BigDecimal!
  
  # Context
  timestamp: BigInt!
  blockNumber: BigInt!
  period: SnapshotPeriod! # HOURLY, DAILY
  
  # Number of active positions
  activePositions: Int!
  totalPositions: Int!
}

type UserTradingSession @entity(immutable: false) {
  id: ID! # user-date
  user: UserActivity!
  date: String! # YYYY-MM-DD
  
  # Daily Trading Stats
  tradesCount: Int!
  volumeAvax: BigDecimal!
  pnlAvax: BigDecimal!
  feesSpent: BigDecimal!
  
  # Session Performance
  winningTrades: Int!
  losingTrades: Int!
  breakEvenTrades: Int!
  
  # Best and Worst Trades
  bestTradeAvax: BigDecimal!
  worstTradeAvax: BigDecimal!
  
  # Timestamps
  firstTradeTimestamp: BigInt!
  lastTradeTimestamp: BigInt!
}

type DailyStats @entity(immutable: false) {
  id: ID! # date (YYYY-MM-DD)
  date: String!
  
  # Token Statistics
  totalTokens: Int!
  newTokens: Int!
  migratedTokens: Int!
  
  # Trading Statistics
  totalVolume: BigDecimal!
  totalTrades: Int!
  uniqueTraders: Int!
  
  # Fee Statistics
  totalProtocolFees: BigDecimal!
  totalCreatorFees: BigDecimal!
  totalReferralFees: BigDecimal!
  
  # Market Statistics
  averageTokenPrice: BigDecimal!
  totalMarketCap: BigDecimal!
  totalLiquidity: BigDecimal!
}

type GlobalStats @entity(immutable: false) {
  id: ID! # "global"
  
  # All-time totals
  totalTokensCreated: Int!
  totalVolumeAllTime: BigDecimal!
  totalTradesAllTime: Int!
  totalUsersAllTime: Int!
  
  # Current statistics
  activeTokens: Int!
  migratedTokens: Int!
  totalValueLocked: BigDecimal!
  
  # Updated timestamp
  lastUpdateTimestamp: BigInt!
}

enum MigrationStatus {
  BONDING
  CLOSE_TO_MIGRATION
  MIGRATED
}

enum TradeType {
  BUY
  SELL
}

enum SnapshotPeriod {
  HOURLY
  DAILY
}
